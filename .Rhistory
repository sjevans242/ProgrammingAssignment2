swirl()
install.packages("swirl")
swirl()
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
?
old.dir <- "Users/simon"
old.dir <- getwd()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls
ls()
list.files()
files.exists("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R, mytest2.R")
file.rename("mytest.R to mytest2.R")
file.rename("mytest.R" to "mytest2.R")
info()
file.rename("mytest.R") to "mytest2.R"
?file.rename
file.rename(from = "mytest.R")
file.rename(from = "mytest.R", to = "mytest2.R")
file.copy(from = "mytest2.R", to = "mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create("testdir2/testdir3", recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink('testdir2')
unlink('testdir2', recursive = TRUE)
setwd('old.dir')
setwd("old.dir")
setwd(old.dir)
unlink("test.dir", recursive = TRUE)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,by=0.5)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
seq(5, 10, length=30)
myseq <- seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length("my_seq")
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
re(0, times=40)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect(<1)
tf <- num_vect[<1]
tf <- num_vect["<1"]
tf <- num_vect < 1
tf
num_vect >=6
c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Simon")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z", sep = ""))
paste(1:3,c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
x <- c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-re(NA, 1000)
z<-rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
add2 <- function (x,y) {
x + y
}
add2(3,5)
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
> above <- function(x,n = 10) {
use <- x > n
x[use]
}
above <- function(x,n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
coumnmean(airquality)
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
cloumnmean(airquality, FALSE)
columnmean(airquality, FALSE)
?numeric
?mean
source(swirl)
library(swirl)
swirl90
swril()
swirl()
ls()
class(plants)
quit()
source("swirl")
libraray(swirl)
library(swirl)
swirl()
2
quit()
library(swirl)
swirl()
dim(plants)
info()
bye()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_lst
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$organe)
sum(flags$orange)
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lenght(unique_vals)
length(unique_vals)
sapply(uniq, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
info()
bye()
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
bye()
quit()
library(datasets)
data("iris")
?iris
iris
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
apply(iris[,1:4],2, mean)
apply(iris[,1:4],1, mean)
test_vec <- apply(iris[,1:4],2, mean)
class(test_vec)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$hp, mtcars$cyl, mean)
diff <- tapply(mtcars$hp, mtcars$cyl, mean)
d <- diff[3] - diff[1]
d
quit()
bash()
ls
dir
dir()
cd("~/Google Drive/coursera/DataScience/R-Programming")
setwd("~/Google Drive/coursera/DataScience/R-Programming")
setwd("~/Google Drive/coursera/DataScience/R_Programming")
ls
ls()
dir()
setwd("./ProgrammingAssignment2")
dir()
ls()
readme.md
